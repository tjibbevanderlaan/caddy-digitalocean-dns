name: Release & publish production image

on:
  push:
    branches: [main]

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write        # create git tag + GitHub release
      packages: write        # push image to Docker Hub

    steps:
      # 1. Check out the repository
      - uses: actions/checkout@v4

      # 2. Parse the Caddy version (e.g. 2.10.1) from the Dockerfile
      - name: Extract Caddy version
        id: vars
        run: |
          ver=$(grep -m1 -Po '(?<=FROM caddy:)[0-9]+\.[0-9]+\.[0-9]+' Dockerfile)
          echo "tag=v$ver"          >> "$GITHUB_OUTPUT"   # v2.10.1
          echo "caddy_version=$ver" >> "$GITHUB_OUTPUT"   # 2.10.1

      # 3. Enable multi-arch builds
      - uses: docker/setup-qemu-action@v3
      - uses: docker/setup-buildx-action@v3

      # 4. Authenticate with Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # 5. Build and push the image with version and latest tags
      - name: Build & push :vX.Y.Z + :latest
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/caddy-digitalocean-dns:${{ steps.vars.outputs.tag }}
            ${{ secrets.DOCKERHUB_USERNAME }}/caddy-digitalocean-dns:latest

      # 6. Create the GitHub release and tag
      - name: Create GitHub release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.vars.outputs.tag }}          # e.g. v2.10.1
          name:     ${{ steps.vars.outputs.tag }}          # release title
          body:     "Automated release for Caddy ${{ steps.vars.outputs.tag }}."
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}