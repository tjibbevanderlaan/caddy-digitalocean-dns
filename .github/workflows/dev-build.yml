name: Build & push dev image + PR

on:
  push:
    branches: [dev]
    paths:
      - 'Dockerfile'
  workflow_dispatch:

env:
  IMAGE_NAME: ${{ secrets.DOCKERHUB_USERNAME }}/caddy-digitalocean-dns
  TARGET_PLATFORMS: linux/amd64,linux/arm64

jobs:
  build-and-pr:
    runs-on: ubuntu-latest
    permissions:
      contents: write        # allow committing changes and creating tags
      pull-requests: write   # allow opening/updating pull-requests
      packages: write        # allow pushing the Docker image

    steps:
      # 1. Check out the repository
      - uses: actions/checkout@v4

      # 2. Parse the Caddy version (e.g. 2.10.1) from the Dockerfile
      - name: Extract Caddy version
        id: vars
        run: |
          ver=$(grep -m1 -Po '(?<=FROM caddy:)[0-9]+\.[0-9]+\.[0-9]+' Dockerfile)
          echo "caddy_version=$ver" >> "$GITHUB_OUTPUT"

      # 3. Enable QEMU emulation for the requested platforms
      - uses: docker/setup-qemu-action@v3
        with:
          platforms: ${{ env.TARGET_PLATFORMS }}

      # 4. Create a Buildx builder that targets the same platforms
      - uses: docker/setup-buildx-action@v3
        with:
          platforms: ${{ env.TARGET_PLATFORMS }}

      # 5. Authenticate with Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # 6. Build and push the image tagged :dev for both platforms
      - name: Build & push :dev tag
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          platforms: ${{ env.TARGET_PLATFORMS }}
          tags: ${{ env.IMAGE_NAME }}:dev
